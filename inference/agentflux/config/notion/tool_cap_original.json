{
  "tool_capabilities": {
    "API-get-user": {
      "extracted_capabilities": {
        "primary_actions": ["retrieve", "get", "fetch"],
        "targets": ["user", "user profile", "single user"],
        "features": [
          "user information retrieval",
          "UUID-based lookup",
          "individual user details"
        ],
        "constraints": ["single user only", "requires valid UUID"],
        "parameters": {
          "required": ["user_id"],
          "optional": [],
          "parameter_purposes": {
            "user_id": "UUID identifier for specific user"
          }
        }
      },
      "derived_capabilities": {
        "can_do": [
          "retrieve specific user details",
          "validate user existence",
          "get user profile information",
          "lookup user by UUID"
        ],
        "cannot_do": [
          "retrieve multiple users at once",
          "search users by name/email",
          "modify user information",
          "list all users",
          "work with invalid UUIDs"
        ],
        "best_for": [
          "user profile lookups",
          "user validation workflows",
          "getting specific user details",
          "user existence checks"
        ]
      }
    },
    "API-get-users": {
      "extracted_capabilities": {
        "primary_actions": ["list", "retrieve", "enumerate"],
        "targets": ["users", "user collection", "all users"],
        "features": [
          "paginated user listing",
          "bulk user retrieval",
          "cursor-based pagination",
          "configurable page sizes"
        ],
        "constraints": ["max 100 items per page", "pagination required for large sets"],
        "parameters": {
          "required": [],
          "optional": ["page_size", "start_cursor"],
          "parameter_purposes": {
            "page_size": "number of users per page (max 100)",
            "start_cursor": "pagination cursor for next page"
          }
        }
      },
      "derived_capabilities": {
        "can_do": [
          "list all workspace users",
          "paginate through user collections",
          "control result set size",
          "implement user directory features",
          "bulk user operations setup"
        ],
        "cannot_do": [
          "filter users by criteria",
          "search users by attributes",
          "modify user information",
          "get more than 100 users per request",
          "sort users by custom criteria"
        ],
        "best_for": [
          "user directory displays",
          "bulk user operations",
          "workspace member enumeration",
          "user selection interfaces"
        ]
      }
    },
    "API-get-self": {
      "extracted_capabilities": {
        "primary_actions": ["retrieve", "identify", "authenticate"],
        "targets": ["bot user", "current user", "token owner"],
        "features": [
          "bot identity retrieval",
          "token validation",
          "self-identification"
        ],
        "constraints": ["token-dependent", "bot user only"],
        "parameters": {
          "required": [],
          "optional": [],
          "parameter_purposes": {}
        }
      },
      "derived_capabilities": {
        "can_do": [
          "identify current bot user",
          "validate API token",
          "get bot permissions",
          "verify authentication status"
        ],
        "cannot_do": [
          "retrieve other users",
          "modify bot information",
          "change permissions",
          "work without valid token"
        ],
        "best_for": [
          "authentication verification",
          "bot identity confirmation",
          "permission validation",
          "initialization workflows"
        ]
      }
    },
    "API-post-search": {
      "extracted_capabilities": {
        "primary_actions": ["search", "find", "query"],
        "targets": ["pages", "databases", "titles", "content"],
        "features": [
          "title-based search",
          "object type filtering",
          "pagination support",
          "sorting by last edited time",
          "result type filtering"
        ],
        "constraints": ["title search only", "limited filter options", "object type filter only"],
        "parameters": {
          "required": [],
          "optional": ["query", "filter", "sort", "page_size", "start_cursor"],
          "parameter_purposes": {
            "query": "search text for title matching",
            "filter": "limit to pages or databases",
            "sort": "order by last_edited_time",
            "page_size": "results per page (max 100)",
            "start_cursor": "pagination cursor"
          }
        }
      },
      "derived_capabilities": {
        "can_do": [
          "find pages and databases by title",
          "filter results by object type",
          "sort by modification time",
          "paginate search results",
          "discover workspace content"
        ],
        "cannot_do": [
          "search within page content",
          "search by properties",
          "advanced filtering",
          "full-text search",
          "search by creation date",
          "search by user/author"
        ],
        "best_for": [
          "content discovery",
          "finding pages by name",
          "workspace exploration",
          "title-based lookups",
          "recent content finding"
        ]
      }
    },
    "API-get-block-children": {
      "extracted_capabilities": {
        "primary_actions": ["retrieve", "list", "get"],
        "targets": ["block children", "nested blocks", "block content"],
        "features": [
          "hierarchical content retrieval",
          "pagination support",
          "nested structure access"
        ],
        "constraints": ["single block level", "max 100 children per page"],
        "parameters": {
          "required": ["block_id"],
          "optional": ["page_size", "start_cursor"],
          "parameter_purposes": {
            "block_id": "parent block identifier",
            "page_size": "children per page",
            "start_cursor": "pagination cursor"
          }
        }
      },
      "derived_capabilities": {
        "can_do": [
          "access nested content",
          "retrieve block hierarchies",
          "paginate large content",
          "inspect content structure"
        ],
        "cannot_do": [
          "get deep nested structures",
          "modify block content",
          "search within blocks",
          "get multiple block trees"
        ],
        "best_for": [
          "content tree navigation",
          "hierarchical content access",
          "page structure analysis",
          "content extraction"
        ]
      }
    },
    "API-retrieve-a-block": {
      "extracted_capabilities": {
        "primary_actions": ["retrieve", "get", "inspect"],
        "targets": ["block", "content block", "individual block"],
        "features": [
          "single block access",
          "block metadata retrieval",
          "content inspection"
        ],
        "constraints": ["single block only"],
        "parameters": {
          "required": ["block_id"],
          "optional": [],
          "parameter_purposes": {
            "block_id": "block identifier"
          }
        }
      },
      "derived_capabilities": {
        "can_do": [
          "inspect individual blocks",
          "get block metadata",
          "validate block existence",
          "analyze block properties"
        ],
        "cannot_do": [
          "retrieve multiple blocks",
          "get block children",
          "modify block content",
          "search blocks"
        ],
        "best_for": [
          "block analysis",
          "content inspection",
          "block validation",
          "metadata extraction"
        ]
      }
    },
    "API-retrieve-a-page": {
      "extracted_capabilities": {
        "primary_actions": ["retrieve", "get", "fetch"],
        "targets": ["page", "page properties", "page metadata"],
        "features": [
          "complete page retrieval",
          "property filtering",
          "metadata access"
        ],
        "constraints": ["single page only", "property-level filtering only"],
        "parameters": {
          "required": ["page_id"],
          "optional": ["filter_properties"],
          "parameter_purposes": {
            "page_id": "page identifier",
            "filter_properties": "limit returned properties"
          }
        }
      },
      "derived_capabilities": {
        "can_do": [
          "get complete page information",
          "retrieve specific properties",
          "access page metadata",
          "validate page existence"
        ],
        "cannot_do": [
          "retrieve multiple pages",
          "get page content blocks",
          "modify page data",
          "search within pages"
        ],
        "best_for": [
          "page property analysis",
          "metadata extraction",
          "page validation",
          "property inspection"
        ]
      }
    }
  }
}